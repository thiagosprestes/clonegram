// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  username      String          @unique
  email         String          @unique
  password      String
  profile       Profile         @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId     String          @default(uuid())
  Post          Post[]
  PostComment   PostComment[]
  PostLike      PostLike[]
  UserFollows   UserFollows[]
  UserFollowers UserFollowers[]
}

model Profile {
  id              String  @id @default(uuid())
  followers       BigInt  @default(0)
  following       BigInt  @default(0)
  bio             String?
  profile_picture String?
  User            User[]
}

model Post {
  id          String        @id @default(uuid())
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  location    String?
  description String?
  createdAt   DateTime      @default(now())
  PostFile    PostFile[]
  PostComment PostComment[]
  PostLike    PostLike[]
}

model PostFile {
  id       String @id @default(uuid())
  post     Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String
  filename String
}

model PostComment {
  id      String @id @default(uuid())
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  comment String
}

model PostLike {
  id     String @id @default(uuid())
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model UserFollows {
  id           String @id @default(uuid())
  userId       String
  userFollowId String
  followedUser User   @relation(fields: [userFollowId], references: [id], onDelete: Cascade)
}

model UserFollowers {
  id             String @id @default(uuid())
  userId         String
  userFollowerId String
  userFollower   User   @relation(fields: [userFollowerId], references: [id], onDelete: Cascade)
}
